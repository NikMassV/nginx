# specifies the number of worker processes; auto means autodetect based on CPU/cores
worker_processes auto;

# the maximum number of open files that Nginx can handle
worker_rlimit_nofile 100000;

# file for logging errors
#error_log  logs/error.log;
# or: #error_log  logs/error.log  notice;

# pid file where the PID of the Nginx master process is recorded
#pid        logs/nginx.pid;

events {
    # maximum number of connections per worker process
    worker_connections  4000;

    # use the epoll mechanism (efficient on Linux)
    use epoll;

    # allow handling multiple new connections at once
    multi_accept on;
}

http {
    # caching information about open file descriptors (FD) and frequently requested files
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # disable access log to improve performance on HDD
    access_log off;

    # the sendfile function copies data between file descriptors within the kernel,
    # which is faster than read() + write()
    sendfile on;

    # send headers in one packet instead of individually
    tcp_nopush on;

    # disables buffering of small data chunks (good for small real-time requests)
    tcp_nodelay on;

    # enable gzip compression to reduce the size of transmitted data
    gzip on;
    # gzip_static on; # if static .gz files exist
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;

    # file types that can be compressed
    gzip_types
        # text/html is compressed by default
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # allows the server to drop "hanging" connections and free memory
    reset_timedout_connection on;

    # timeout for the request body (default is 60 sec)
    client_body_timeout 10;

    # if the client stops responding, free resources (default is 60 sec)
    send_timeout 2;

    # keep-alive connection timeout (default is 75 sec)
    keepalive_timeout 30;

    # number of requests a client can send over a single keep-alive connection
    keepalive_requests 100000;

    server {
        # port the server listens on
        listen       80;
        # server name (domain or IP)
        server_name  localhost;

        # configure root directory and index files
        location / {
            root   html;
            index  index.html index.htm;
        }

        # error page
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
